// json解析为struct
var ajaxreq models.AjaxReq
reqBody, _ := ioutil.ReadAll(req.Body)
err := json.Unmarshal(reqBody, &ajaxreq)
defer req.Body.Close()
if err != nil {
	log.Printf("Unmarshal Json Error : %v\n", err)
	return
}
// Show Request JSON Data
log.Println(string(reqBody))
log.Printf("Request Data To Struct : %v", ajaxreq)

// struct组合为json
retcode = "OK"
retmsg = "成功"
ajaxres := models.AjaxResMessage{RetCode: retcode, RetMsg: retmsg}
log.Printf("Response Data To Struct : %v", ajaxres)
retdata, err := json.Marshal(ajaxres)
if err != nil {
	log.Printf("Marshal Json Error : %v\n", err)
}

// 自带http服务器创建方法
func main() {
    http.HandleFunc("/", indexHandle)
    http.Handle("/static/", http.StripPrefix("/static/", http.FileServer(http.Dir("static"))))
    log.Fatalln(http.ListenAndServe(":8888", nil))
}
func indexHandle(res http.ResponseWriter, req *http.Request) {
	fmt.Fprintf(res, "Route Index : %v\n", req.URL)
}

// 自带DBAPI操作数据库方式

// Connect func()
func Connect() (*MyDB, error) {
	dbstr := fmt.Sprintf("host=%v port=%v user=%v password=%v dbname=%v sslmode=disable", host, port, user, password, dbname)
	db, err := sql.Open("postgres", dbstr)
	if err != nil {
		log.Printf("DB Connect Failed : %v", err)
		return nil, err
	}
	// defer db.Close()

	err = db.Ping()
	if err != nil {
		log.Printf("DB Ping Failed : %v", err)
		return nil, err
	}

	mydb := &MyDB{DB: db}
	return mydb, nil
}

// DBClose (){}
func (db *MyDB) DBClose() {
	db.Close()
}

// Insert (tab string, args []interface{}) error
func (db *MyDB) Insert(tab string, stat map[string]interface{}) error {
	stmt, err := db.Prepare("INSERT INTO test.TB_TEST(id,name) VALUES($1,$2) RETURNING id")
	if err != nil {
		log.Printf("SQL Prepare Failed : %v", err)
	}
	defer stmt.Close()
	res, err := stmt.Exec(1, "test1")
	if err != nil {
		log.Printf("SQL Execute Failed : %v", err)
	}
	log.Println(res)
	return nil
}

// 模板数据
        <select id="system">
            <!-- 模板填充 数据为map[string]string{"111":"ORSS-海外报表平台"} -->
            {{range $id, $val := .}}
            <option value="{{$id}}">{{$val}}</option>
            {{end}}
        </select>